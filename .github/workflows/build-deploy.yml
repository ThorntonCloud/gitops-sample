name: Build, Scan, and Update

on:
  push:
    branches:
      - main
      - develop

env:
  DOCKER_IMAGE: thorntoncloud/nginx-gitops
  HELM_CHART_PATH: ./helm/nginx-chart

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image tag
        id: tag
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "full_image=${DOCKER_IMAGE}:${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          file: ./docker/Dockerfile
          push: false
          load: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.sha }}
            ${{ env.DOCKER_IMAGE }}:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy vulnerability scanner (table output)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.sha }}
          format: 'table'

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.sha }}
          docker push ${{ env.DOCKER_IMAGE }}:latest

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Run Helm lint
        run: |
          helm lint ${{ env.HELM_CHART_PATH }}

      - name: Update Helm Chart with new image tag
        run: |
          # Update appVersion in Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${{ steps.tag.outputs.sha }}\"/" ${{ env.HELM_CHART_PATH }}/Chart.yaml
          
          # Update image tag in values.yaml
          sed -i "s/tag:.*/tag: ${{ steps.tag.outputs.sha }}/" ${{ env.HELM_CHART_PATH }}/values.yaml

      - name: Commit and push Helm chart changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.HELM_CHART_PATH }}/Chart.yaml
          git add ${{ env.HELM_CHART_PATH }}/values.yaml
          git diff --staged --quiet || git commit -m "Update Helm chart to image tag ${{ steps.tag.outputs.sha }} [skip ci]"
          git push